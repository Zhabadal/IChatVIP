//
//  SetupProfileVipViewController.swift
//  IChatVIP
//
//  Created by Александр Бадмаев on 28.03.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol SetupProfileVipDisplayLogic: class {
    func displayData(viewModel: SetupProfileVip.Model.ViewModel.ViewModelData)
}

class SetupProfileVipViewController: UIViewController, SetupProfileVipDisplayLogic {
    
    // MARK: - External vars
    
    var interactor: SetupProfileVipBusinessLogic?
    var router: (NSObjectProtocol & SetupProfileVipRoutingLogic & SetupProfileVipDataPassing)?
    
    // MARK: - Internal vars
    
    let fillImageView = AddPhotoView()
    
    let setupProfileLabel = UILabel(text: "Set up profile!", font: .avenir26())
    
    let fullNameTextFieldView = OneLineTextFieldView(labelText: "Full name")
    let aboutMeTextFieldView = OneLineTextFieldView(labelText: "About me")
    let sexLabel = UILabel(text: "Sex")
    
    let sexSegmentedControl = UISegmentedControl(first: "Male", second: "Female")
    
    let goToChatsButton = UIButton(title: "Go to chats!", titleColor: .white, backgroundColor: .buttonDark())
    
    // MARK: - Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: - Setup
    
    private func setup() {
        let viewController = self
        let interactor = SetupProfileVipInteractor()
        let presenter = SetupProfileVipPresenter()
        let router = SetupProfileVipRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        interactor?.makeRequest(request: .setUsernameAndPhoto)
        
        view.backgroundColor = .white
        setupConstraints()
        
        goToChatsButton.addTarget(self, action: #selector(goToChatsButtonTapped), for: .touchUpInside)
        fillImageView.plusButton.addTarget(self, action: #selector(plusButtonTapped), for: .touchUpInside)
    }
    
    @objc func goToChatsButtonTapped() {
        interactor?.makeRequest(
            request: .saveProfileWith(
                username: fullNameTextFieldView.textField.text,
                avatarImage: fillImageView.circleImageView.image,
                description: aboutMeTextFieldView.textField.text,
                sex: sexSegmentedControl.titleForSegment(at: sexSegmentedControl.selectedSegmentIndex)
            )
        )
    }
    
    @objc private func plusButtonTapped() {
        router?.showImagePicker()
    }
    
    // MARK: - SetupProfileVipDisplayLogic
    
    func displayData(viewModel: SetupProfileVip.Model.ViewModel.ViewModelData) {
        switch viewModel {
        case let .displayUsernameAndPhoto(name, photoUrl):
            if let username = name {
                fullNameTextFieldView.textField.text = username
            }
            
            if let url = photoUrl {
                fillImageView.circleImageView.sd_setImage(with: url)
            }
            
        case let .displayAlert(title, message, type):
            router?.showAlert(title: title, message: message, type: type)
        }
    }
}

// MARK: - UIImagePickerControllerDelegate

extension SetupProfileVipViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate {
    
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        picker.dismiss(animated: true)
        guard let image = info[.originalImage] as? UIImage else { return }
        fillImageView.circleImageView.image = image
    }
}

// MARK: - Constraints setup

extension SetupProfileVipViewController {
    
    private func setupConstraints() {
        let sexStackView = UIStackView(arrangedSubviews: [sexLabel, sexSegmentedControl], axis: .vertical, spacing: 12)
        
        let stackView = UIStackView(arrangedSubviews: [fullNameTextFieldView, aboutMeTextFieldView, sexStackView, goToChatsButton], axis: .vertical, spacing: 40)
        
        goToChatsButton.snp.makeConstraints { make in
            make.height.equalTo(60)
        }
        
        view.addSubview(setupProfileLabel)
        setupProfileLabel.snp.makeConstraints { make in
            make.top.equalToSuperview().inset(160)
            make.centerX.equalToSuperview()
        }
        
        view.addSubview(fillImageView)
        fillImageView.snp.makeConstraints { make in
            make.top.equalTo(setupProfileLabel.snp.bottom).offset(40)
            make.centerX.equalToSuperview()
        }
        
        view.addSubview(stackView)
        stackView.snp.makeConstraints { make in
            make.top.equalTo(fillImageView.snp.bottom).offset(40)
            make.left.right.equalToSuperview().inset(40)
        }
    }
    
}
